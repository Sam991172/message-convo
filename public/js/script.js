
const app = document.getElementById("app");

const pages = [
  {
    message: "I know Iâ€™ve made mistakes in the past â€” and Iâ€™m genuinely sorry for the ways I hurt you or made you feel exhausted.",
    options: ["Next", "Not Ready"]
  },
  {
    message: "Iâ€™ve had time to reflect, and I truly regret not being better when it mattered most.",
    options: ["Iâ€™m listening", "Still hurts"]
  },
  {
    message: "Iâ€™ve started working on myself â€” not just for us, but for me. Iâ€™m learning calmness, maturity, and consistency.",
    options: ["Go on", "Too late"]
  },
  {
    message: "Iâ€™m not trying to fix the past or force anything. But if thereâ€™s even a small space to start fresh â€” from peace, not pressure â€” Iâ€™d be grateful to explore that.",
    options: ["Maybe", "I need time"]
  },
  {
    message: "Only if your heart is open to it. If not, I understand and still wish you love and clarity.",
    options: ["That means a lot", "Goodbye"]
  },
  {
    message: "Thank you for reading this with an open heart. No matter what, Iâ€™ll carry respect for you always.",
    options: ["See Full Message"]
  },
  {
    message: `I know Iâ€™ve made mistakes in the past â€” and Iâ€™m genuinely sorry for the ways I hurt you or made you feel exhausted.\n\nIâ€™ve had time to reflect, and I truly regret not being better when it mattered most.\n\nIâ€™ve started working on myself â€” not just for us, but for me. For the first time, Iâ€™m really understanding what it means to grow with calmness, maturity, and consistency.\n\nIâ€™m not trying to fix the past or force anything. But if thereâ€™s even a small space to start fresh â€” from pe...
    full: true
  }
];

let currentPage = 0;
const chosen = [];

function renderPage(index) {
  const page = pages[index];
  app.innerHTML = `
    <div class="message">${page.message.replace(/\n/g, "<br>")}</div>
    ${!page.full ? `
      <div class="buttons">
        <button class="primary" onclick="handleChoice(0)">${page.options[0]}</button>
        <button class="secondary" onclick="handleChoice(1)">${page.options[1]}</button>
      </div>` : ''}
  `;

  if (page.full) {
    for (let i = 0; i < 30; i++) {
      const emoji = document.createElement("div");
      emoji.className = "emoji";
      emoji.style.left = Math.random() * 100 + "vw";
      emoji.style.animationDuration = 5 + Math.random() * 5 + "s";
      emoji.style.top = Math.random() * 100 + "vh";
      emoji.innerHTML = "ðŸ˜”";
      app.appendChild(emoji);
    }

    fetch("/submit", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ timestamp: new Date(), choices: chosen })
    });
  }
}

function handleChoice(optionIndex) {
  chosen.push({ page: currentPage, choice: optionIndex });
  currentPage++;
  if (currentPage < pages.length) {
    renderPage(currentPage);
  }
}

renderPage(currentPage);
